@using WebMVC.Models
@model AccountMView
@{
    Layout = Request.IsAjaxRequest() ? null : "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@{
    ViewBag.Title = "Cập nhật tài khoản";
}

<div id="tab-form-seperated" class="tab-pane">
    <style>
        .panel.panel-yellow {
            border-color: #483752 !important;
        }
        .panel.panel-yellow > .panel-heading {
            background: #483752 !important;
            border-color: #483752!important;
        }
        .lka button a{
            color: white;
        }
    </style>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-yellow">
                <div class="panel-heading">Form Seperated</div>
                <div class="panel-body pan">
                    
@using (Ajax.BeginForm("InfoUser", "Customers", new AjaxOptions()
{
    UpdateTargetId = "tab-form-seperated",
    HttpMethod = "POST",
    OnComplete = "kiemtraketqua"

}, new { @class = "form-horizontal form-seperated", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserName)
        
        <div class="form-group">
            @if (TempData["Success"] != null)
            {
                <script>
                    thongbaothanhcong("Thông báo", "Thao tác thành công");
                </script>
            }
            @if (ViewData["Error"] != null)
            {
                if (@ViewData["Error"].ToString().Equals("1"))
                {
                    <script>

                    thongbao2s("Thông báo lỗi", "Mật khẩu không đúng");
                    </script>
                }
                else if (@ViewData["Error"].ToString().Equals("2"))
                {
                    <script>

                    thongbao2s("Thông báo lỗi", "Không tìm thấy tài khoản");
                    </script>
                }
                else
                {
                    <script>

                    thongbao2s("Thông báo lỗi", "Lỗi không xác định");
                    </script>
                }


            }
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-md-3 control-label" })
            <div class="col-md-4">
                <span style="font-weight:bold;">
                    @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                </span>
                <span class="help-block">Tài khoản không được chỉnh sửa tên đăng nhập</span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-3 control-label" })

            <div class="col-md-4">
                <div class="input-icon">
                    <i class="fa fa-envelope"></i>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    <span class="help-block">Email có thể thay đổi</span>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "col-md-3 control-label" })

            <div class="col-md-4">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-3 control-label" })

            <div class="col-md-4">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-md-3 control-label" })

            <div class="col-md-4">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-actions text-right pal lka">
        <button type="submit" class="btn btn-primary">Cập nhật</button>
        &nbsp;
        <button type="button" class="btn btn-green">
            @Html.ActionLink("Huỷ", "Index", "Customers")
        </button>
    </div>
}
@*@using (Html.BeginForm("InfoUser", "Admin", FormMethod.Post, new { @class = "form-horizontal form-seperated", role = "form" }))
{
    
}*@
<script>
    var kiemtraketqua = function(result)
    {
        
        var rs = JSON.parse(result.responseText,quirks_mode => true);
        if (rs != null) {
            if(rs.error != 0)
            {
                thongbao2s("Thông báo lỗi","Lỗi");
            } else {
                thongbaothanhcong("Thông báo", "Thao tác thành công");
            }
        }
        
    }
</script>
                    
                    
                </div>
            </div>


        </div>
    </div>
</div>
